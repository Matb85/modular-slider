:root {
  --slide-margin: 0px;
}

.ms-outer-con {
  /* hide the slides that should be out of view*/
  overflow: hidden;
  .ms-inner-con {
    /* the position MUST be set to relative because some carousel transitions use the left css property */
    position: relative;
    display: flex;
    flex-wrap: nowrap;
    height: auto;
    width: auto;
    > * {
      flex: 0 0 auto;
      margin-left: var(--slide-margin);
      margin-right: var(--slide-margin);
    }
    > *,
    > * img {
      -webkit-user-drag: none; // prevent imgs from being dragged
      user-select: none;
    }
  }
}

/* variant with a specified width of the slides - the container subordinates to them*/
.ms-outer-con:not(.width-in-percentage) {
  /*
  required variables with examples:
    --slide-width: 15rem; // the width of each slide
    --slide-margin: 25px; // the left and right margin of each element
    --slides-per-view: 2; // the number of how many slides are displayed at once
    they can be put in this element or in the :root 
*/
  width: calc((var(--slide-width) + 2 * var(--slide-margin)) * var(--slides-per-view));
  .ms-inner-con > * {
    width: var(--slide-width);
  }
}

/* variant with a specified width of the container - the slides subordinate to it*/
.ms-outer-con.width-in-percentage {
  /*
  required variables with examples:
  --number-of-slides: 6; // the number of the slides, total
  you don't have to set --number-of-slides - it's just a fallback value just in case something goes wrong 
  --slides-per-view: 2; // the number of how many slides are displayed at once - this one is compulsory!
  --slide-margin: 25px; // the left and right margin of each element
  */
  .ms-inner-con {
    width: calc(100% * var(--number-of-slides) / var(--slides-per-view));
    > * {
      width: calc((100%) / var(--number-of-slides) - 2 * var(--slide-margin));
    }
  }
}
